@{
    ViewData["Title"] = "Dashboard"; // Título da página
    Layout = "~/Views/Shared/_Layout.cshtml"; // Usa o layout principal

    // Define o mês e ano selecionado, com fallback para o mês e ano atual
    var mesSelecionado = ViewBag.Mes != null ? (int)ViewBag.Mes : DateTime.Now.Month;
    var anoSelecionado = ViewBag.Ano != null ? (int)ViewBag.Ano : DateTime.Now.Year;
}

<!-- Formulário para filtrar por mês e ano -->
<form method="get" asp-action="Dashboard" class="row g-3 mb-4">
    <div class="col-md-2">
        <label class="form-label fw-bold">Mês</label>
        <select name="mes" class="form-select">
            @for (int i = 1; i <= 12; i++)
            {
            <option value="@i" selected="@(i == mesSelecionado)">
                @System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)
            </option>
            }
        </select>
    </div>
    <div class="col-md-2">
        <label class="form-label fw-bold">Ano</label>
        <select name="ano" class="form-select">
            @for (int y = DateTime.Now.Year - 2; y <= DateTime.Now.Year + 5; y++)
            {
            <option value="@y" selected="@(y == anoSelecionado)">@y</option>
            }
        </select>
    </div>
    <div class="col-md-2 align-self-end">
        <button type="submit" class="btn btn-secondary">Filtrar</button>
    </div>
</form>

<!-- Mostra os totais mensais: receita, despesa e saldo -->
<div class="dashboard-row">
    <div class="box">Receita Mensal<br /><strong>@ViewBag.Receita.ToString("C")</strong></div>
    <div class="box">Despesa Mensal<br /><strong>@ViewBag.Despesa.ToString("C")</strong></div>
    <div class="box">Saldo Atual<br /><strong>@ViewBag.Saldo.ToString("C")</strong></div>
</div>

<!-- Gráfico de evolução diária e tabela de categorias de despesa -->
<div class="dashboard-row">
    <div class="box box-situacao">
        <h4>Situação Mensal</h4>
        <canvas id="linhaChart"></canvas>
    </div>

    <div class="box box-despesas">
        <h4>Despesas</h4>
        <table>
            <thead>
                <tr><th>Categoria</th><th>Valor</th></tr>
            </thead>
            <tbody>
                @if (ViewBag.Categorias != null && ViewBag.Categorias.Count > 0)
                {
                    foreach (var cat in ViewBag.Categorias)
                    {
                <tr><td>@cat.Categoria</td><td>@String.Format("{0:C}", cat.Total)</td></tr>
                    }
                }
                else
                {
                <tr><td colspan="2">Sem dados</td></tr>
                }
            </tbody>
        </table>
    </div>
</div>

@{
    // Dados para cálculo da percentagem da meta atingida
    var metas = ViewBag.Metas as List<DWebProjetoFinal.Entities.Meta> ?? new List<DWebProjetoFinal.Entities.Meta>();
    var totalAlvo = metas.Sum(m => m.ValorAlvo);
    var totalAtual = metas.Sum(m => m.ValorAtual);
    var percentagem = totalAlvo > 0 ? (totalAtual / totalAlvo * 100) : 0;
}

<!-- Gráfico em donut + progresso das metas + orçamento mensal -->
<div class="dashboard-row" style="align-items: flex-start;">
    <div class="box box-grafico" style="display: flex; gap: 40px; align-items: center;">
        <div style="flex: 1;">
            <h4>Despesas Mensais Repartidas</h4>
            <canvas id="donutChart"></canvas>
        </div>

        <!-- Legenda do gráfico donut com cores distintas por categoria -->
        <ul class="categoria-legenda" style="margin-top: 0;">
            @{
                var cores = new[] { "#e0e0e0", "#c2c2c2", "#a6a6a6", "#8c8c8c", "#666666", "#4d4d4d", "#333333", "#1a1a1a" };
                int i = 0;
            }

            @if (ViewBag.Categorias != null && ViewBag.Categorias.Count > 0)
            {
                foreach (var cat in ViewBag.Categorias)
                {
                    var cor = cores[i % cores.Length];
            <li><span class="cor-legenda" style="background-color: @cor"></span>@cat.Categoria</li>
                    i++;
                }
            }
            else
            {
            <li><span class="cor-legenda" style="background-color: #e0e0e0"></span>Sem dados</li>
            }
        </ul>
    </div>

    <!-- Secção de metas com barra de progresso e lista -->
    <div class="box box-metas">
        <h4>Meta de Economia Mensal</h4>
        <div class="progress-container">
            <div class="progress-bar" style="width:@percentagem%;"></div>
        </div>
        <div style="display: flex; justify-content: space-between; font-size: 0.85em; color: #666;">
            <span>0%</span>
            <span>100%</span>
        </div>

        @if (metas.Count > 0)
        {
        <table class="tabela-metas">
            <thead><tr><th>Meta:</th><th>Valor</th></tr></thead>
            <tbody>
                @foreach (var meta in metas)
                    {
                <tr><td>@meta.Nome</td><td>@meta.ValorAlvo.ToString("C")</td></tr>
                    }
            </tbody>
        </table>
        }
        else
        {
        <div style="margin-top: 20px; color: #777; font-size: 0.95em;">Nenhuma meta ainda definida.</div>
        }
    </div>

    <!-- Secção com informação do orçamento mensal -->
    <div class="box">
        <h4>Orçamento Mensal</h4>
        <strong>@ViewBag.OrcamentoGasto.ToString("C") / @ViewBag.OrcamentoLimite.ToString("C")</strong>
        <div style="margin-top: 10px; font-size: 0.9em; color: #555;">
            Utilizado: @ViewBag.OrcamentoPercent.ToString("0.##")%
        </div>
    </div>
</div>

<!-- Scripts de geração de gráficos (linha e donut) com Chart.js -->
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        window.onload = function () {
            // Dados do gráfico de linha (saldo diário)
            const dadosDiarios = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Diario ?? new List<object>()));

            // Dados do gráfico donut (despesas por categoria)
            let categorias = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categorias ?? new List<object>()));
            let semDados = categorias.length === 0;

            if (semDados) {
                categorias = [{ Categoria: "Sem dados", Total: 1 }];
            }

            const ctxLinha = document.getElementById('linhaChart')?.getContext('2d');
            const linhaChart = new Chart(ctxLinha, {
                type: 'line',
                data: {
                    labels: dadosDiarios.map(d => d.Dia),
                    datasets: [{
                        label: 'Evolução Mensal',
                        data: dadosDiarios.map(d => d.Saldo),
                        borderColor: 'black',
                        fill: false,
                        tension: 0.3
                    }]
                },
                options: {
                    plugins: {
                        legend: { display: false }
                    }
                }
            });

            const ctxDonut = document.getElementById('donutChart')?.getContext('2d');
            const donutChart = new Chart(ctxDonut, {
                type: 'doughnut',
                data: {
                    labels: categorias.map(c => c.Categoria),
                    datasets: [{
                        data: categorias.map(c => c.Total),
                        backgroundColor: semDados
                            ? ['#e0e0e0']
                            : ['#e0e0e0', '#c2c2c2', '#a6a6a6', '#8c8c8c', '#666666', '#4d4d4d', '#333333', '#1a1a1a']
                    }]
                },
                options: {
                    plugins: {
                        legend: { display: false }
                    }
                }
            });
        }
    </script>
}

<!-- Estilos customizados da dashboard -->
<style>
    .dashboard-row {
        display: flex;
        gap: 40px;
        flex-wrap: wrap;
        justify-content: space-between;
        margin-top: 30px;
        margin-bottom: 60px;
        align-items: stretch;
    }

    .box {
        background-color: #fff;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);
        flex: 1;
        min-width: 300px;
        font-size: 0.95em;
    }

        .box strong {
            font-size: 1.8em;
            color: #000;
            margin-top: 10px;
            font-weight: bold;
        }

    .progress-container {
        width: 100%;
        background-color: #eee;
        height: 16px;
        border-radius: 8px;
        margin: 10px 0;
        overflow: hidden;
    }

    .progress-bar {
        height: 100%;
        background-color: #4caf50;
        transition: width 0.4s ease;
    }

    .categoria-legenda {
        list-style: none;
        padding-left: 0;
        margin-top: 30px;
    }

        .categoria-legenda li {
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 0.95em;
        }

    .cor-legenda {
        display: inline-block;
        width: 16px;
        height: 16px;
        border-radius: 3px;
    }

    canvas {
        max-width: 100%;
        max-height: 300px;
    }
</style>
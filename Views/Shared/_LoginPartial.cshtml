@using Microsoft.EntityFrameworkCore

@* Injeta a instância do contexto de base de dados para aceder a utilizadores *@
@inject DWebProjetoFinal.Entities.AppDbContext _context

@* Verifica se o utilizador está autenticado *@
@if (User.Identity.IsAuthenticated)
{
@* Obtém o utilizador autenticado da base de dados *@
    var user = await _context.UserAccounts.FirstOrDefaultAsync(u => u.UserName == User.Identity.Name);

@* Define imagem padrão caso o utilizador não tenha nenhuma *@
    var userProfileImage = "/logo.png";

@* Se existir uma imagem de perfil, usa-a *@
    if (user != null && !string.IsNullOrEmpty(user.ProfileImagePath))
    {
        userProfileImage = user.ProfileImagePath;
    }

@* Renderiza nome do utilizador, imagem de perfil e botão de logout *@
<div class="navbar-right d-flex align-items-center">
    <span class="me-2">@user?.FirstName @user?.LastName</span>

    @* Link para editar perfil *@
    <a asp-controller="Account" asp-action="Edit" style="margin-right: 10px;">
        <img src="@userProfileImage" alt="Profile Image" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover;" />
    </a>

    @* Formulário para fazer logout com botão *@
    <form asp-controller="Account" asp-action="LogOut" method="post" id="logoutForm">
            <button type="submit" class="btn logout-btn btn-dark">SAIR</button>
    </form>
</div>
}
else
{
@* Se o utilizador NÃO estiver autenticado, mostra botões de registo e login *@
    <ul class="nav navbar-nav navbar-right d-flex align-items-center">
        <li class="me-2">
            <a class="btn btn-dark" asp-controller="Account" asp-action="Registration">REGISTAR</a>
        </li>
        <li>
            <a class="btn btn-dark" asp-controller="Account" asp-action="Login">ENTRAR</a>
        </li>
    </ul>
}